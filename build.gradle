//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id "fabric-loom" version '1.7.+'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21

version = "$project.baseVersion+$project.branch"
archivesBaseName = "placeholder-api"

repositories {
}

sourceSets {
    testmod {
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.compileClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            ideConfigGenerated project.rootProject == project
            name = "Test Mod Client"
            source sourceSets.testmod
        }
        testmodServer {
            server()
            ideConfigGenerated project.rootProject == project
            name = "Test Mod Server"
            source sourceSets.testmod
        }
    }
}

dependencies {
    minecraft libs.mc
    mappings variantOf(libs.yarn) { classifier "v2" }

    modImplementation libs.fl
    modCompileOnly libs.fapi
    modLocalRuntime libs.fapi

    testmodImplementation sourceSets.main.output
}

tasks.withType(ProcessResources).configureEach {
    final Map<String, String> meta = [
            version       : version,
            modId         : modId,
            modName       : modName,
            modDescription: modDescription,
            homepage      : homepage,
            issues        : issues,
            sources       : sources,
            license       : license,
            authors       : authors.split(", ").join("\",\n    \""),
            mc            : libs.versions.mc.get(),
            fl            : libs.versions.fl.get(),
            fapi          : libs.versions.fapi.get()
    ]
    inputs.properties meta
    filesMatching("fabric.mod.json") { expand meta }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
